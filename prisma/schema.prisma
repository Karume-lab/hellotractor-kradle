generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String               @id @default(cuid())
  email              String               @unique
  hashPassword       String?
  role               UserRole             @default(USER)
  session            Session[]
  task               Task[]
  passwordResetToken PasswordResetToken[]
  profile            Profile?
}

model Profile {
  id                String           @id @default(cuid())
  user              User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String           @unique
  firstName         String
  lastName          String
  middleName        String?
  displayName       String?
  buyer             Buyer?
  business          Business[]
  trainedOperator   TrainedOperator?
  businessId        String?
  trainedOperatorId String?
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  expiresAt DateTime
  role      UserRole @default(USER)
  user      User     @relation(fields: [userId], references: [id])
}

model Task {
  id     String @id @default(cuid())
  title  String
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserRole {
  ADMIN
  USER
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
}

model Buyer {
  id        String  @id @default(cuid())
  profileId String  @unique
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model Business {
  id        String  @id @default(cuid())
  isDealer  Boolean @default(false)
  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model TrainedOperator {
  id        String  @id @default(cuid())
  profileId String  @unique
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model Equipment {
  id String @id @default(cuid())
}

model Message {
  id String @id @default(cuid())
}
